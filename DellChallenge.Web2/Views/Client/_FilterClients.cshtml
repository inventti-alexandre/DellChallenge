@model DellChallenge.Domain.EntitiesViewModel.ClientFilterViewModel

@{
    ViewData["Title"] = "Filter Clients";
}

<script type="text/javascript">
    $(document).ready(function () {

        $("input[type='text']").addClass('form-control');
        //$(".date").datepicker();

        $("#search").on('click', function (e) {

            var filter = {
                name: $("#Name").val(),
                genderId: $("#GenderId").val(),
                cityId: $("#CityId").val(),
                regionId: $("#RegionId").val(),
                lastPurchase: $("#LastPurchase").val(),
                lastPurchaseUntil: $("#LastPurchaseUntil").val(),
                classificationId: $("#ClassificationId").val(),
                sellerId: $("#SellerId").val(),
            }
           
            $.ajax({
                url: "/Client/FilterClients",
                type: "POST",
                data: filter,
                success: function (response) {
                    if (response != null) {
                        $("#clients").html(response);
                    }
                },
                error: function (response) {

                    $("#clients").html(response.responseJSON.errors);
                }
            });

        });

        $("#CityId").on('change', function (e) {

            var cityId = $("#CityId").val();

            if (cityId == "") {
                cityId = 0;
            }

            $.ajax({
                    url: "/Client/FilterRegions?cityId=" + cityId,
                    type: "GET",
                    success: function (data) {
                        if (data != null) {
                           
                            var ddldist = $("#RegionId");
                            ddldist.children().not(":first").remove();

                            $.each(data.obj, function (val, text) {
                                debugger;
                                ddldist.append(
                                    $("<option></option>").val(text.value).html(text.text)
                                );
                            });
                        }
                    },
                    error: function (response) {
                    }
                });
            
        });

        $("#clear").on('click', function (e) {
            window.location = '/Client/';
        });

    });

</script>

<h2>Filter Clients</h2>
<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6 ">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name)
                        </div>
                        <div class="col-sm-6">
                            @Html.Label("Gender")
                            @Html.DropDownListFor(model => model.GenderId, new SelectList(Model.Genders, "Value", "Text"), "Select", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6">
                            @Html.Label("city")
                            @Html.DropDownListFor(model => model.CityId, new SelectList(Model.Cities, "Value", "Text"), "Select", new { @class = "form-control" })
                            
                        </div>
                        <div class="col-sm-6">
                            @Html.Label("Region")
                            @Html.DropDownListFor(model => model.RegionId, new SelectList(Model.Regions, "Value", "Text"), "Select", new { @class= "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6">
                            @Html.Label("Last Purchase")
                            @Html.TextBoxFor(model => model.LastPurchase, new { @class = "date" })
                        </div>
                        <div class="col-sm-6">
                            @Html.Label("Until")
                            @Html.TextBoxFor(model => model.LastPurchaseUntil, new { @class = "date" } )
                        </div>
                    </div>
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6">
                            @Html.Label("Classification")
                            @Html.DropDownListFor(model => model.ClassificationId, new SelectList(Model.Classifications, "Value", "Text"), "Select", new { @class = "form-control" })
                        </div>
                        @if (Model.RoleId == (int)DellChallenge.Domain.Enum.RoleEnum.Administrator)
                        {
                        <div class="col-sm-6">
                            @Html.Label("Seller")
                            @Html.DropDownListFor(model => model.SellerId, new SelectList(Model.Sellers, "Value", "Text"), "Select", new { @class = "form-control" })

                        </div>
                        }
                    </div>
                    <div class="row">
                            <div class="col-sm-2">
                                <input type="button" class="btn waves-effect waves-light col s12" name="search" value="Search" id="search" />
                            </div>
                            <div class="col-sm-2">
                                <input type="button" class="btn waves-effect waves-light col s12" name="clear" value="Clear" id="clear" />
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="clients">
    @Html.Partial("_ListClients", Model.Clients)
</div>